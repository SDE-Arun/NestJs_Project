name: CI/CD for NestJs_Project

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-22.04
    steps:
        # Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v4

        # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1

        # Install Dependencies
      - name: Install Dependencies
        run: yarn install

        # Build the Application
      - name: Build Application
        run: yarn build

        # Inject Environment Variables securely
      - name: Inject Environment Variables
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL}}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env       
      
  test_unit: 
    name: Unit Test Cases
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1

      - name: Install Dependencies
        run: yarn install

      - name: Build Application
        run: yarn build

      - name: Inject Environment Variables
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL}}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env       

      # Run Unit Test Cases
      - name: Run Unit Tests
        run: yarn test

  test_e2e: 
    name: e2e Test Cases
    runs-on: ubuntu-22.04
    needs: build  # Ensure that tests run after the build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1

      - name: Install Dependencies
        run: yarn install

      - name: Build Application
        run: yarn build

      - name: Inject Environment Variables
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL}}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env       

      # Run End-to-End (E2E) Tests
      - name: Run E2E Tests
        run: yarn test:e2e

        # Upload Build Artifacts (Ensure dist/ exists)
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
